# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  push:
    branches: [ master ]


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  cfcompile:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: cfcompile
      uses: foundeo/cfml-compiler-action@master
      with:
        cfengine: lucee@5.2.9.31
  
  fixinator:
    runs-on: ubuntu-latest
    steps: 
    - uses: actions/checkout@v2
    - name: Fixinator Security Scan 
      uses: foundeo/fixinator-github-action@master
      with:
        fixinator_api_key: ${{ secrets.FIXINATOR_API_KEY }}
  
  test-api:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    - name: Start Up
      run: docker-compose up &

    - name: Wait for startup 
      run: tests/curl/server-up.sh
    
    - name: Run curl test 
      run: tests/curl/curl.sh
    
    - name: Run Postman Newman Tests
      run: npx newman run tests/newman/ci-example.postman_collection.json
    
    - name: Run Puppeteer
      run: |
        cd tests/puppeteer
        sudo apt-get install -y libgbm-dev
        npm install
        node test.js
    - name: Save Screenshot
      uses: actions/upload-artifact@v2
      with:
        path: tests/puppeteer/screenshot.png

      
  testbox:
    runs-on: ubuntu-latest
    # testbox uses encodeForHTML so we need that extension installed
    env:
        LUCEE_EXTENSIONS: "37C61C0A-5D7E-4256-8572639BE0CF5838"
    container:
      image: foundeo/cfml-ci-tools:latest
    steps:  
    - uses: actions/checkout@v2
    - name: Start a server
      run: box server start cfengine=lucee@5.2.9.31
    - name: Install dependencies
      run: box install
    - name: Run TestBox Tests
      run: box testbox run

  textlint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Text Lint
      run: |
        sudo npm install -g textlint-rule-max-comma textlint
        textlint --rule max-comma README.md
      
  cflint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: cfcompile	    
      uses: docker://foundeo/cfml-ci-tools:latest
      with:
        entrypoint: /opt/box/box
        args: cflint reportLevel=WARNING
        
  codechecker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: cfcompile	    
      uses: docker://foundeo/cfml-ci-tools:latest
      with:
        entrypoint: /opt/box/box
        args: codechecker run

